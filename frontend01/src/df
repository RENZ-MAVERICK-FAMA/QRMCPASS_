<template>
    <div class="wrapper">
      <!-- Sidebar -->
  
      
      <nav id="sidebar" v-bind:class="{ 'active': isSidebarOpen }">
      
  
        <ul class="list-unstyled components">
          <div class="sidebar-header">
          <h3>QRMCPASS</h3>
        </div>
          <li>
            <RouterLink to="/loginUnit" v-if="!authenticated">Unit</RouterLink>
          </li>
          <li>
            <RouterLink to="/loginTeller" v-if="!authenticated">Teller</RouterLink>
          </li>
          <li>
            <RouterLink to="/login" v-if="!authenticated">Operator</RouterLink>
          </li>
          <li>
            <RouterLink to="/loginAdmin" v-if="!authenticated">Admin</RouterLink>
          </li>
          <li>
            <RouterLink to="/loginkiosk" v-if="!authenticated">Top up</RouterLink>
          </li>
          <li v-if="authenticated && show">
            <router-link to="/home">Home</router-link>
          </li>
          <li v-if="authenticated">
            <button class="btn btn-link" @click="logout">Logout</button>
          </li>
          <li v-if="!authenticated">
            <RouterLink to="/signup">Sign Up</RouterLink>
          </li>
          <li v-if="!authenticated">
            <RouterLink to="/addTeller">Add Teller</RouterLink>
          </li>
          <li v-if="!authenticated">
            <RouterLink to="/addAdmin">Add Admin</RouterLink>
          </li>
          <!-- <li v-if="!authenticated">
            <RouterLink to="/addkiosk">Add Kiosk</RouterLink>
          </li> -->
        </ul>
      </nav>
  
      <!-- Page Content -->
      <div id="content">
        <!-- Toggle sidebar button -->
        <button type="button" id="sidebarCollapse" class="btn btn-dark" @click="toggleSidebar">
    <span class="burger-icon"></span>
  </button>
  
        <!-- Main content -->
        <div class="container-fluid">
          <RouterView :showHomeButton="showHomeButton" />
        </div>
      </div>
    </div>
  </template>
  
  <script setup>
  import { ref, watch } from 'vue'
  import { useRoute, useRouter } from 'vue-router'
  
  const authenticated = ref(localStorage.getItem('access_token') !== null)
  const route = useRoute()
  const router = useRouter()
  const isSidebarOpen = ref(false)
  
  // Watch for changes in the authenticated flag
  watch(authenticated, (newValue) => {
    if (!newValue) {
      // User is not authenticated
      router.push('/login')
    }
  })
  
  // Toggle sidebar function
  const toggleSidebar = () => {
    isSidebarOpen.value = !isSidebarOpen.value
  }
  
  // Logout function
  const logout = () => {
    localStorage.removeItem('access_token')
    localStorage.removeItem('accountType')
    authenticated.value = false
    router.push('/login')
  }
  </script>
  
  <style scoped>
  /* Your scoped styles here */
  
  
  #sidebar {
    position: fixed;
    top: 0;
    left: -250px;
    height: 100vh;
    width: 250px;
    background: #343a40;
    color: #fff;
    transition: all 0.3s;
    z-index: 9999;
  }
  
  #sidebar.active {
    left: 0;
  }
  
  #sidebar .sidebar-header {
    padding: 20px;
    background: #343a40;
  }
  
  #sidebar ul.components {
    padding: 20px 0;
    border-bottom: 1px solid #47748b;
  }
  
  #sidebar ul p {
    padding: 10px;
  }
  
  #sidebar ul li a {
    padding: 10px;
    font-size: 1.1em;
    display: block;
  }
  
  #sidebar ul li a:hover {
    color: #333d68;
    background: #7a7979;
  }
  
  #sidebar ul li.active > a,
  a[aria-expanded="true"] {
    color: #928c8c;
    background: #343a40;
  
  }
  
  #sidebarCollapse {
    position: fixed;
    top: 20px;
    left: 20px;
    z-index: 999;
    display: block;
    color: #fff;
    background: transparent;
    border: none;
    font-size: 24px;
  }
  
  
  .burger-icon {
    display: inline-block;
    width: 30px;
    height: 3px;
    background-color: rgba(84, 84, 84, 0.65);
    position: relative;
    border: 1px solid rgba(84, 84, 84, 0.65); /* Add border */
    border-radius: 2px; /* Add border radius for rounded corners */
    z-index: 10001; /* Ensure the burger icon appears above the sidebar */
  }
  
  .burger-icon::before,
  .burger-icon::after {
    content: '';
    display: block;
    width: 100%;
    height: 3px;
    background-color: rgba(84, 84, 84, 0.65);
    border: 1px solid rgba(84, 84, 84, 0.65);
    position: absolute;
    transition: transform 0.3s ease;
  }
  
  .burger-icon::before {
    top: -8px;
  }
  
  .burger-icon::after {
    bottom: -8px;
  }
  #sidebarCollapse {
    position: fixed;
    top: 20px;
    left: 20px;
    z-index: 10000;
  } 
  
  /* Rotate the before and after elements to create the burger icon effect */
  #sidebarCollapse.active .burger-icon::before {
    transform: rotate(45deg);
    top: 0;
  }
  
  #sidebarCollapse.active .burger-icon::after {
    transform: rotate(-45deg);
    bottom: 0;
  }
  #sidebar ul li a {
    padding: 10px;
    font-size: 1.1em;
    display: block;
    color: white; /* Change text color to white */
    text-decoration: none; /* Remove underline */
  }
  
  #sidebar ul li a:hover {
    color: #333d68;
    background: #fff;
    text-decoration: none; /* Remove underline */
  }
  
  /* Center the burger icon horizontally */
  #sidebarCollapse .burger-icon {
    margin: 0 auto;
  }
  @media (max-width: 768px) {
    #sidebar {
      margin-left: -250px;
    }
    #sidebar.active {
      margin-left: 0;
    }
  }
  </style>
  